<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 数据源定义，生产库 -->
    <bean id="fmsMerchantmasterDataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close">
        <property name="driverClassName" value="${property.fms.merchantmaster.mysql.jdbc.driver}"/>
        <property name="url" value="${property.fms.merchantmaster.jdbc.url}"/>
        <property name="username" value="${property.fms.merchantmaster.jdbc.username}"/>
        <property name="password" value="${property.fms.merchantmaster.jdbc.password}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${fms.merchantmaster.jdbc.datasource.initialSize}"/>
        <!-- 最大活动连接数量 -->
        <property name="maxActive" value="${fms.merchantmaster.jdbc.datasource.maxActive}"/>
        <!-- 最大空闲连接数量 -->
        <!--<property name="maxIdle" value="${fms.merchantmaster.jdbc.datasource.maxIdle}"/>-->
        <!-- 最小空闲连接数量 -->
        <property name="minIdle" value="${fms.merchantmaster.jdbc.datasource.minIdle}"/>
        <!-- 是否自动提交 -->
        <property name="defaultAutoCommit" value="${fms.merchantmaster.jdbc.datasource.defaultAutoCommit}"/>
        <!-- 空闲连接被回收时间，回收空闲连接至minIdle指定数量，单位毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${fms.merchantmaster.jdbc.datasource.minEvictableIdleTimeMillis}"/>
        <!-- 检查空闲连接是否可被回收，如果小于等于0，不会启动检查线程，默认-1，单位毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${fms.merchantmaster.jdbc.datasource.timeBetweenEvictionRunsMillis}"/>
        <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <property name="numTestsPerEvictionRun" value="${fms.merchantmaster.jdbc.datasource.numTestsPerEvictionRun}"/>
        <!-- SQL查询,用来验证从连接池取出的连接 -->
        <property name="validationQuery" value="${fms.merchantmaster.jdbc.datasource.validationQuery}"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
        <property name="testWhileIdle" value="${fms.merchantmaster.jdbc.datasource.testWhileIdle}"/>
        <!-- 指明是否在从池中取出连接前进行检验,如果检验失败, -->
        <property name="testOnBorrow" value="${fms.merchantmaster.jdbc.datasource.testOnBorrow}"/>
        <!-- 指明是否在归还到池中前进行检验 -->
        <property name="testOnReturn" value="${fms.merchantmaster.jdbc.datasource.testOnReturn}"/>
        <!-- 标记是否删除泄露的连接，设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接. -->
        <property name="removeAbandoned" value="${fms.merchantmaster.jdbc.datasource.removeAbandoned}"/>
        <!-- 泄露的连接可以被删除的超时值, 单位秒 -->
        <property name="removeAbandonedTimeout" value="${fms.merchantmaster.jdbc.datasource.removeAbandonedTimeout}"/>
        <!-- 将会在回收事件后，在log中打印出回收Connection的错误信息，在调试的时候很有用。 -->
        <property name="logAbandoned" value="${fms.merchantmaster.jdbc.datasource.logAbandoned}"/>
        <!-- 获取连接时等待时间，超出将抛异常，单位毫秒 -->
        <property name="maxWait" value="${fms.merchantmaster.jdbc.datasource.maxWait}"/>

        <property name="useGlobalDataSourceStat" value="true" />
        <!-- 配置监控统计拦截的filters -->
        <!--<property name="filters" value="log4j" />-->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter" />
                <ref bean="log-filter" />
            </list>
        </property>
    </bean>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
        <property name="statementCloseAfterLogEnabled" value="false" />
        <property name="statementPrepareAfterLogEnabled" value="false" />
        <property name="statementParameterSetLogEnabled" value="false" />
    </bean>


    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true" />
        <property name="slowSqlMillis" value="${fms.merchantmaster.slowSqlMillis}" />
        <property name="logSlowSql" value="true" />
    </bean>

</beans>